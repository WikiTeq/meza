# Add inst.ks=https://www.mediawiki.org/w/index.php?title=User:Djflux/r8-vbox-kickstart&action=raw to the boot statement
# See https://github.com/pykickstart/pykickstart/blob/master/docs/kickstart-docs.rst for kickstart documentation
# Use this Kickstart File for testing Meza version: https://github.com/djflux/meza/tree/rhel8-35.x
#
# This kickstart file will install a Rocky Linux 8 minimal environment on
# any machine. It is specifically designed to install git so that the admin 
# may git clone meza and start a monolith installation on the machine. 
#
# Use this version if you have the ability to edit your localhost hosts file
# (/etc/hosts on Linux/macOS, C:\Windows\System32\drivers\etc\hosts on 
# Windows machines). You must have administrator/root/elevated priveleges on
# your machine to edit the hosts file. If you cannot edit your local hosts
# file, consider using the r8-ks-vbox-gui.cfg to build a self-contained 
# Linux VM so you can access "localhost" within the VM.
#
# This file is specifically designed for virtual machines running on
# VirtualBox virtualization software. During the kickstart pre-installation 
# phase the script will determine the most current stable version of 
# VirtualBox and then prompt the admin to input which version of VirtualBox is
# hosting this VM. Pressing ENTER at the prompt will default to using the most
# recent stable version of VB and download and install/compile the VB Guest
# Additions.
#
lang en_US
keyboard us
timezone America/New_York --isUtc
rootpw abc123
#platform x86_64
reboot
url --url=https://ord.mirror.rackspace.com/rocky/8/BaseOS/x86_64/os
bootloader --append="rhgb quiet crashkernel=auto"
zerombr
clearpart --all --initlabel
autopart
auth --passalgo=sha512 --useshadow
selinux --enforcing
firewall --enabled --http --ssh
firstboot --disable
%packages
@^minimal-environment
@network-tools
git
vim-enhanced
net-tools
# Needed for compiling VirtualBox Guest Additions
bzip2
elfutils-libelf-devel
gcc
kernel-devel
kernel-headers
make
perl
tar
%end

%pre
iotty=`tty`
exec > $iotty 2> $iotty
VB_CURR=`curl -s http://download.virtualbox.org/virtualbox/LATEST-STABLE.TXT`
echo
echo
echo -n "Enter your version of VirtualBox (press ENTER for latest version: ${VB_CURR}): "
read USER_VB

if [ ! "x"${USER_VB} == "x" ]; then
	VBOX_VERSION=${USER_VB}
else
	VBOX_VERSION=${VB_CURR}
fi

echo -n $VBOX_VERSION > /tmp/vbox_version.txt

cat >> /tmp/vbox_guest.sh << EOF
VBOX_VERSION=`cat /tmp/vbox_version.txt`

# Change to temp directory and download VboxGuestAdditions
cd /tmp
curl -O http://download.virtualbox.org/virtualbox/$VBOX_VERSION/VBoxGuestAdditions_$VBOX_VERSION.iso

# Mount and run iso
mkdir -p /mnt/vbox
mount -o loop,ro VBoxGuestAdditions_$VBOX_VERSION.iso /mnt/vbox
sh /mnt/vbox/VBoxLinuxAdditions.run

# Cleanup
umount /mnt/vbox
rm /tmp/VBoxGuestAdditions_$VBOX_VERSION.iso
EOF

%end 


%post --nochroot --log=/mnt/sysimage/var/log/ks-post.log
cat >> /mnt/sysimage/etc/profile.d/mystuff.sh << EOF
alias dir='ls --color -la | more'
alias cls=clear
alias vi=vim

export PS1="[\u@\h \w]\\\\$ "
EOF

cp /tmp/vbox_guest.sh /mnt/sysimage/tmp/vbox_guest.sh
chroot /mnt/sysimage /bin/sh /tmp/vbox_guest.sh
%end
